package compte;import guichet.Guichet;import guichet.transaction.Transaction;import java.util.Date;import java.util.Enumeration;/** Classe de base abstraite  pour la representation du recu a etre imprimer. *  Chaque type de transaction cree une instance d'une sous-classe concrete de cette classe. */public abstract class Recu{    /** Constructor.  Ce constructeur cree les portions communes du recu,       *  et les contructeur des sous classes s'occupent de creer les autres details.     *     *  @param atm le guichet ou la transaction a ete effectuee     *  @param card la carte utilisee     *  @param transaction l'objet Transaction de la transcation     *  @param balances Objets Balances qui donnent les balances finales de comptes utilises.     */         protected Recu(Guichet atm, Carte card, Transaction transaction, Balances balances)    {        // Entete du recu                headingPortion = new String[4];        headingPortion[0] = new Date().toString();        headingPortion[1] = atm.getBankName();        headingPortion[2] = "# GUICHET " + atm.getID() + " " + atm.getPlace();        headingPortion[3] = "# CARTE " + card.getNumber() +                      " # TRANS " + transaction.getSerialNumber();        // Le constructeur de chaque sous-classe va remplir les details                 // Partie Balancesdu recu                balancesPortion = new String[2];        balancesPortion[0] = "BAL TOTALE: " + balances.getTotal();        balancesPortion[1] = "DISPONIBLE: " + balances.getAvailable();    }    /** Prendre les lignes individuelles a imprimer . Chaque appel a nextElement()     *  de l'enumeration retourne une ligne (comme String)     */         public Enumeration getLines()    {        return new Enumeration() {                    // La partie courante du recu a etre imprimer                        private int portion = 0;                        // L'index de la ligne dans la partie courante.                        private int index = 0;                        public boolean hasMoreElements()            {                return portion < 2 || index < balancesPortion.length;            }                        public Object nextElement()            {                String line = null;                                switch (portion)                {                    case 0:                                            line = headingPortion[index ++];                        if (index >= headingPortion.length)                        {                            portion ++;                            index = 0;                        }                        break;                                        case 1:                                            line = detailsPortion[index ++];                        if (index >= detailsPortion.length)                        {                            portion ++;                            index = 0;                        }                        break;                                            case 2:                                            line = balancesPortion[index ++];                        break;                }                return line;            }        };    }    // Variables d'instances    /** Entete du recu - commune a tous les recus     */    private String [] headingPortion;        /** Partie detail de transaction - specifique a chaque type de      * transaction, et donc repmlie par les sous-classes     */    protected String [] detailsPortion;        /** Partie balances finales du recu - commune a tous les recus     */    private String [] balancesPortion;  }
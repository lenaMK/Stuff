 package guichet.transaction;import compte.InformationCompte;import compte.Carte;import compte.Message;import compte.Argent;import compte.Recu;import compte.Etat;import guichet.Guichet;import guichet.Session;import guichet.physique.*;/** Representation d'une transaction de depot */public class Depot extends Transaction{	/** Constructor    *    *  @param atm the ATM used to communicate with customer    *  @param session the session in which the transaction is being performed    *  @param card the customer's card    *  @param pin the PIN entered by the customer    */    public Depot(Guichet atm, Session session, Carte card, int pin)    {        super(atm, session, card, pin);    }        /** Recupere des details de la transaction avec le client    *    *  @return message a la banque pour initier cette transaction     *  @exception ConsoleClient.Cancelled si le client annule la transaction    */    protected Message getSpecificsFromCustomer() throws ConsoleClient.Cancelled    {        to = atm.getCustomerConsole().readMenuChoice(            "Compte ou deposer",            InformationCompte.ACCOUNT_NAMES);        amount = atm.getCustomerConsole().readAmount("Montant a deposer");                return new Message(Message.INITIATE_DEPOSIT,                           card, pin, serialNumber, -1, to, amount);    }        /** Complete une transaction approuvee    *    *  @return recu a etre imprimer pour cette transaction    *  @exception ConsoleClient.Cancelled si le client annule la transaction ou     *  le temps allouee est depasse    */    protected Recu completeTransaction() throws ConsoleClient.Cancelled    {        atm.getEnvelopeAcceptor().acceptEnvelope();        Etat status = atm.getNetworkToBank().sendMessage(            new Message(Message.COMPLETE_DEPOSIT,                        card, pin, serialNumber, -1, to, amount),             balances);                    return new Recu(this.atm, this.card, this, this.balances) {            {                detailsPortion = new String[2];                detailsPortion[0] = "DEPOT A: " +                                     InformationCompte.ACCOUNT_ABBREVIATIONS[to];                detailsPortion[1] = "MONTANT: " + amount.toString();            }        };    }        /** Compte ou deposer     */     private int to;        /** Montant d'argent depose     */    private Argent amount;            }